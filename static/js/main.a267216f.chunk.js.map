{"version":3,"sources":["blockchain/build/web3.js","logo.svg","blockchain/build/NFT.js","blockchain/build/NFT1155.js","blockchain/blockchain-functions/functions.js","pages/create/components/createMultiNFT.js","pages/create/components/createSingleNFT.js","pages/create/index.js","components/wallet-button/WalletButton.js","components/header/Card.js","pages/dashboard/components/NFTCard.js","pages/dashboard/index.js","assets/images/baba.png","components/sidebar/ResponsiveDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["web3","Web3","require","window","givenProvider","alert","eth","Contract","NftToken","abi","ERC1155","Moralis","initialize","serverURL","currentUser","User","current","login","a","authenticate","then","user","console","log","get","uploadFile","data","fileToUpload","File","name","type","saveIPFS","createNFT","URI","metaData","instance","JSON","stringify","methods","create","send","from","ethereum","selectedAddress","newNFT","createMultiNFT","NFT1155","amount","getNFTBalance","options","chain","address","getNFTs","BscNFT","extraInfoNFT","id","typeNFT","extraInfoMap","call","extraInfo","parse","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","MultiNFT","classes","useState","age","location","description","NFTDetails","setNFTDetails","fileUploaded","setFileUploaded","handleUpload","e","target","files","result","handleCreate","_hash","Paper","className","Typography","variant","Grid","container","item","xs","lg","style","width","height","display","includes","src","_ipfs","controls","Button","size","onChange","noValidate","autoComplete","TextField","fullWidth","placeholder","value","TextareaAutosize","minRows","FormControl","FormControlLabel","control","Switch","label","onClick","SingleNFT","Create","createSingleNFT","setCreateSingleNFT","ToggleButtonGroup","ToggleButton","selected","WalletButton","startIcon","minWidth","bullet","margin","transform","title","fontSize","pos","marginBottom","SimpleCard","Box","sm","component","Avatar","NFTCard","props","contract_type","token_id","token_address","token_uri","NFTinfo","setNFTinfo","maxWidth","getExtraInfo","error","useEffect","Card","CardActionArea","CardMedia","alt","image","CardContent","gutterBottom","CardActions","Dashboard","NFT","setNFT","getNFT","direction","justifyContent","alignItems","length","map","nft","drawerWidth","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","drawerPaper","content","ResponsiveDrawer","useTheme","React","mobileOpen","setMobileOpen","handleDrawerToggle","Link","toolbar","List","ListItem","ListItemIcon","baba","ListItemAvatar","ListItemText","primary","button","to","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","edge","Hidden","smUp","implementation","Drawer","anchor","open","onClose","ModalProps","keepMounted","xsDown","path","render","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a267216f.chunk.js","sourcesContent":["const Web3 = require('web3');\n\nlet web3;\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n  //we are in the browser and metamask is running\n  web3 = new Web3(Web3.givenProvider);\n} else {\n  //we are on the server or the user don't have metamask\n\n  window.alert('Please Connect Your Wallet');\n  // const provider = new Web3.providers.HttpProvider(\n  //     \"https://data-seed-prebsc-1-s1.binance.org:8545\"\n  // );\n  // web3 = new Web3(provider);\n}\n\nexport default web3;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import web3 from './web3';\r\nimport NftToken from './NftToken.json';\r\n\r\nexport default () => {\r\n  return new web3.eth.Contract(\r\n    NftToken.abi,\r\n    '0xE4BFBCB18788aD353077f877822460348F606F1E'\r\n  );\r\n};\r\n","import web3 from './web3';\r\nimport ERC1155 from './ERC1155.json';\r\n\r\nexport default () => {\r\n  return new web3.eth.Contract(\r\n    ERC1155.abi,\r\n    '0xDD53f66e6ae5C62F7C922faaaad9082695E9D439'\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport NftToken from '../build/NFT';\r\nimport NFT1155 from '../build/NFT1155';\r\nimport web3 from '../build/web3';\r\nconst Moralis = require('moralis');\r\nMoralis.initialize('9jTSEy7eKGdH8EBCOvH5zCYM01TxksUQcItcbfQg');\r\nMoralis.serverURL = 'https://dzfl3tiplyqt.usemoralis.com:2053/server';\r\nlet currentUser = Moralis.User.current();\r\n\r\nfunction BlockchainFunctions() {\r\n  // Set Variables\r\n  const [userAddress, setUserAddress] = useState(null);\r\n  const [balances, setBalances] = useState(null);\r\n  const [balancesNFT, setBalancesNFT] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [fileUploaded, setFileUploaded] = useState(null);\r\n  const [fileName, setFileName] = useState('');\r\n  const [fileURI, setFileURI] = useState(null);\r\n  const [mediaType, setMediaType] = useState(null);\r\n  let currentUser = Moralis.User.current();\r\n\r\n  // Login with Moralis Function\r\n  const login = async () => {\r\n    try {\r\n      Moralis.Web3.authenticate().then(function (user) {\r\n        setUserAddress(user.get('ethAddress'));\r\n      });\r\n      console.log(\"moralis connected\")\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Logout from Moralis\r\n  const logout = async () => {\r\n    try {\r\n      Moralis.User.logOut().then(() => {\r\n        currentUser = Moralis.User.current();\r\n        setUserAddress(null);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Get BEP-20 balances of userAddress\r\n  const getBalances = async () => {\r\n    if (userAddress) {\r\n      try {\r\n        const options = { chain: 'bsc testnet', address: userAddress };\r\n        const tokens = await Moralis.Web3.getAllERC20(options);\r\n        setBalances(tokens);\r\n        console.log(balances);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Get NFT Balances of userAddress\r\n  const getNFTBalance = async () => {\r\n    try {\r\n      const options = {\r\n        chain: 'bsc testnet',\r\n        address: window.ethereum.selectedAddress,\r\n      };\r\n      const BscNFT = await Moralis.Web3.getNFTs(options);\r\n      setBalancesNFT(BscNFT);\r\n      console.log(BscNFT);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //Upload File to IPFS\r\n  async function uploadFile(e) {\r\n    setIsUploading(true);\r\n    try {\r\n      const data = e.target.files[0];\r\n      const fileToUpload = new Moralis.File(data.name, data);\r\n      console.log(data, fileToUpload);\r\n      await fileToUpload.saveIPFS();\r\n      setFileUploaded(fileToUpload._ipfs);\r\n      setFileURI(fileToUpload._hash);\r\n      if (data.type.includes('video') || data.type.includes('audio')) {\r\n        setMediaType('video');\r\n      } else if (data.type.includes('image')) {\r\n        setMediaType('image');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setIsUploading(false);\r\n  }\r\n\r\n  // Send transaction to contract\r\n  const createNFT = async (file, NFTDetails) => {\r\n    try {\r\n      let instance = await NftToken();\r\n      \r\n      const newNFT = await instance.methods\r\n        .create(file._hash, NFTDetails)\r\n        .send({ from: window.ethereum.selectedAddress });\r\n\r\n        return newNFT\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return {\r\n    createNFT,\r\n    createMultiNFT,\r\n    login,\r\n  };\r\n}\r\n\r\nexport const login = async () => {\r\n  try {\r\n    Moralis.Web3.authenticate().then(function (user) {\r\n      console.log(user.get('ethAddress'));\r\n    });\r\n\r\n    return currentUser.get('ethAddress');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    Moralis.User.logOut().then(() => {\r\n      console.log(Moralis.User.current());\r\n    });\r\n    return currentUser.get('ethAddress');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport async function uploadFile(data) {\r\n  try {\r\n    const fileToUpload = new Moralis.File(data.name, data);\r\n    fileToUpload.type = data.type;\r\n    await fileToUpload.saveIPFS();\r\n    \r\n\r\n    return fileToUpload;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const createNFT = async (URI, metaData) => {\r\n  try {\r\n    let instance = await NftToken();\r\n    let data = JSON.stringify(metaData);\r\n    console.log(data);\r\n    const newNFT = await instance.methods\r\n      .create(URI, data)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n\r\n    console.log(newNFT);\r\n    return newNFT;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createMultiNFT = async (URI, metaData) => {\r\n  try {\r\n    let instance = await NFT1155();\r\n    let data = JSON.stringify(metaData);\r\n    console.log(data);\r\n    const newNFT = await instance.methods\r\n      .create(metaData.amount, URI, data)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n\r\n    console.log(newNFT);\r\n    return newNFT;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getNFTBalance = async () => {\r\n    try {\r\n      const options = {\r\n        chain: 'bsc testnet',\r\n        address: window.ethereum.selectedAddress,\r\n      };\r\n      const BscNFT = await Moralis.Web3.getNFTs(options);      \r\n      console.log(BscNFT);\r\n      return BscNFT\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\nexport const extraInfoNFT = async (id, typeNFT) => {\r\n\r\n  if(typeNFT === \"ERC721\") {\r\n    try {\r\n       let instance = await NftToken();\r\n      let extraInfo = await instance.methods.extraInfoMap(id).call()\r\n      return JSON.parse(extraInfo.metaData)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  } else if(typeNFT === \"ERC1155\") {\r\n    try {\r\n      let instance = await NFT1155();\r\n      let extraInfo = await instance.methods.extraInfoMap(id).call()      \r\n      return JSON.parse(extraInfo.metaData)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  \r\n\r\n}","import React, { useState } from 'react';\r\nimport {  uploadFile, createMultiNFT } from '../../../blockchain/blockchain-functions/functions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './form.scss';\r\nimport { Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function MultiNFT() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n  const [NFTDetails, setNFTDetails] = useState({\r\n    name: '',\r\n    location: '',\r\n    amount: \"\",\r\n    description: '',\r\n    type:\"\"\r\n  });\r\n  const [fileUploaded, setFileUploaded] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = event => {\r\n    const name = event.target.name;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleUpload = async e => {\r\n    let result = await uploadFile(e.target.files[0]);\r\n    setFileUploaded(result);\r\n    setNFTDetails({ ...NFTDetails, type: result.type })    \r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    let URI = fileUploaded._hash;\r\n    console.log(URI, NFTDetails);\r\n    let result = await createMultiNFT(URI, NFTDetails);\r\n    console.log(result);\r\n  };\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Typography variant=\"h5\">Create Multi NFT - BEP-1155</Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={4} className=\"img_column\">\r\n          <Box\r\n          \r\n            style={{\r\n              width: '300px',\r\n              height: '300px',\r\n              display: 'grid',\r\n              'place-items': 'center',\r\n            }}\r\n          >\r\n            {fileUploaded?.type.includes('image') && (\r\n              <img style={{\"max-width\": \"100%\",\r\n        \"max-height\": \"100%\"\r\n        }} src={fileUploaded._ipfs} />\r\n            )}\r\n\r\n           {(fileUploaded?.type.includes('video') ||\r\n              fileUploaded?.type.includes('audio')) && (\r\n                <video style={{\"max-width\": \"100%\",\r\n        \"max-height\": \"100%\"\r\n        }}  controls src={fileUploaded._ipfs} />\r\n              )}\r\n            {!fileUploaded && <h3>Upload Your File</h3>}\r\n          </Box>\r\n          <br />\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className=\"darkbtn\"\r\n          >\r\n            <label>\r\n              Upload\r\n              <input\r\n                onChange={e => handleUpload(e)}\r\n                type=\"file\"\r\n                style={{ display: 'none' }}\r\n              />\r\n            </label>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} lg={8}>\r\n          <Grid container>\r\n            <Grid xs={12} lg={6} className=\"column\">\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Asset Name\"\r\n                  value={NFTDetails.name}\r\n                  onChange={e =>\r\n                    setNFTDetails({ ...NFTDetails, name: e.target.value })\r\n                  }\r\n                />\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Asset Location\"\r\n                  value={NFTDetails.location}\r\n                  onChange={e =>\r\n                    setNFTDetails({ ...NFTDetails, location: e.target.value })\r\n                  }\r\n                />\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Amount of Tokens\"\r\n                   type=\"number\"\r\n                  value={NFTDetails.amount}\r\n                  onChange={e =>\r\n                    setNFTDetails({ ...NFTDetails, amount: e.target.value })\r\n                  }\r\n                />\r\n\r\n                <TextareaAutosize\r\n                  aria-label=\"minimum height\"\r\n                  className=\"textarea_feild\"\r\n                  minRows={5}\r\n                  placeholder=\"Description and Comments\"\r\n                  value={NFTDetails.description}\r\n                  onChange={e =>\r\n                    setNFTDetails({\r\n                      ...NFTDetails,\r\n                      description: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </form>\r\n              <FormControl variant=\"outlined\" className=\"select_feild\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                    // checked={checked} onChange={toggleChecked}\r\n                    />\r\n                  }\r\n                  label=\"Put on Sale\"\r\n                />\r\n              </FormControl>\r\n              <br />\r\n             \r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                onClick={handleCreate}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport {  uploadFile, createNFT } from '../../../blockchain/blockchain-functions/functions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './form.scss';\r\nimport { Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function SingleNFT() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n  const [NFTDetails, setNFTDetails] = useState({\r\n    name: '',\r\n    location: '',\r\n    description: '',\r\n  });\r\n  const [fileUploaded, setFileUploaded] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = event => {\r\n    const name = event.target.name;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleUpload = async e => {\r\n    let result = await uploadFile(e.target.files[0]);\r\n    setFileUploaded(result);\r\n    setNFTDetails({ ...NFTDetails, type: result.type })   \r\n    \r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    let URI = fileUploaded._hash;\r\n    console.log(URI, NFTDetails);\r\n    let result = await createNFT(URI, NFTDetails);\r\n    console.log(result);\r\n  };\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Typography variant=\"h5\">Create Single NFT - BEP721</Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={4} className=\"img_column\">\r\n          <Box\r\n            style={{\r\n              width: '300px',\r\n              height: '300px',\r\n              display: 'grid',\r\n              'place-items': 'center',\r\n            }}\r\n          >\r\n            {fileUploaded?.type.includes('image') && (\r\n              <img style={{\"max-width\": \"100%\",\r\n        \"max-height\": \"100%\"\r\n        }}  src={fileUploaded._ipfs} />\r\n            )}\r\n\r\n            {(fileUploaded?.type.includes('video') ||\r\n              fileUploaded?.type.includes('audio')) && (\r\n                <video style={{\"max-width\": \"100%\",\r\n        \"max-height\": \"100%\"\r\n        }}  controls src={fileUploaded._ipfs} />\r\n              )}\r\n            {!fileUploaded && <h3>Upload Your File</h3>}\r\n          </Box>\r\n          <br />\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className=\"darkbtn\"\r\n          >\r\n            <label>\r\n              Upload\r\n              <input\r\n                onChange={e => handleUpload(e)}\r\n                type=\"file\"\r\n                style={{ display: 'none' }}\r\n              />\r\n            </label>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} lg={8}>\r\n          <Grid container>\r\n            <Grid xs={12} lg={6} className=\"column\">\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Asset Name\"\r\n                  value={NFTDetails.name}\r\n                  onChange={e =>\r\n                    setNFTDetails({ ...NFTDetails, name: e.target.value })\r\n                  }\r\n                />\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Asset Location\"\r\n                  value={NFTDetails.location}\r\n                  onChange={e =>\r\n                    setNFTDetails({ ...NFTDetails, location: e.target.value })\r\n                  }\r\n                />\r\n\r\n                <TextareaAutosize\r\n                  aria-label=\"minimum height\"\r\n                  className=\"textarea_feild\"\r\n                  minRows={5}\r\n                  placeholder=\"Description and Comments\"\r\n                  value={NFTDetails.description}\r\n                  onChange={e =>\r\n                    setNFTDetails({\r\n                      ...NFTDetails,\r\n                      description: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </form>\r\n              <FormControl variant=\"outlined\" className=\"select_feild\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                    // checked={checked} onChange={toggleChecked}\r\n                    />\r\n                  }\r\n                  label=\"Put on Sale\"\r\n                />\r\n              </FormControl>\r\n              <br />\r\n              \r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                onClick={handleCreate}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport MultiNFT from \"./components/createMultiNFT\"\r\nimport SingleNFT from \"./components/createSingleNFT\"\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction Create() {\r\n    const [createSingleNFT, setCreateSingleNFT] = useState (true)\r\n\r\n    return (\r\n        <Paper className=\"form_content\" style={{\r\n              \r\n              display: 'grid',\r\n              'place-items': 'center',\r\n            }}>\r\n            <ToggleButtonGroup>\r\n            <ToggleButton selected={createSingleNFT} value=\"left\" aria-label=\"left aligned\" className=\"bb\" onClick={() => setCreateSingleNFT(true)}>\r\n              Sigle NFT\r\n            </ToggleButton>\r\n            <ToggleButton selected={!createSingleNFT} aria-label=\"justified\" className=\"bbb\" onClick={() => setCreateSingleNFT(false)}>\r\n              Multiple NFT\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n            \r\n          {createSingleNFT ? <SingleNFT /> : <MultiNFT />}\r\n\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Create\r\n","import React from \"react\";\r\nimport { useWallet, UseWalletProvider } from \"use-wallet\";\r\nimport { BiWallet } from \"react-icons/bi\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { login } from \"../../blockchain/blockchain-functions/functions\";\r\nimport \"./walletbutton.scss\";\r\n\r\nfunction WalletButton() {\r\n  \r\n\r\n  return (\r\n    <>\r\n     \r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"dark\"\r\n        className=\"connect_wallect\"\r\n        onClick={login}\r\n        startIcon={<BiWallet />}\r\n      >\r\n        Connect wallet\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WalletButton","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {RiShareForwardLine} from \"react-icons/ri\";\r\nimport {RiCoinsLine} from \"react-icons/ri\";\r\nimport {FiSettings} from \"react-icons/fi\";\r\nimport {FaHandHoldingHeart} from \"react-icons/fa\";\r\nimport WalletButton from \"../wallet-button/WalletButton\";\r\nimport \"./card.scss\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Box className=\"main\">\r\n    <Grid container spacing={3} className=\"main_heading\">\r\n        <Grid item xs={12} sm={8}>\r\n          <Typography variant=\"h4\" component=\"h2\">\r\n            My Travel Assets Dasdhboard\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4}>\r\n          <WalletButton />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper className=\"red_paper\">\r\n          <Avatar>\r\n          <RiShareForwardLine />\r\n             \r\n            </Avatar>\r\n            <Box>\r\n              <Typography variant=\"h6\">\r\n                300\r\n              </Typography>\r\n              <Typography variant=\"caption\">\r\n              Your T-shares\r\n              </Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item  xs={12} sm={3}>\r\n          <Paper className=\"red_paper\">\r\n          <Avatar>\r\n          <RiCoinsLine />\r\n            </Avatar>\r\n            <Box>\r\n              <Typography variant=\"h6\">\r\n               3000\r\n              </Typography>\r\n              <Typography variant=\"caption\">\r\n              Your T-shares\r\n              </Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item  xs={12} sm={3}>\r\n          <Paper className=\"red_paper\">\r\n          <Avatar>\r\n              <FaHandHoldingHeart />\r\n            </Avatar>\r\n            <Box>\r\n              <Typography variant=\"h6\">\r\n               100\r\n              </Typography>\r\n              <Typography variant=\"caption\">\r\n              Your T-shares\r\n              </Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper className=\"yellow_paper\">\r\n            <Avatar>\r\n              <FiSettings />\r\n            </Avatar>\r\n            <Box>\r\n              <Typography variant=\"h6\">\r\n                Setting\r\n              </Typography>\r\n              <Typography variant=\"caption\">\r\n              Your T-shares\r\n              </Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { extraInfoNFT } from 'blockchain/blockchain-functions/functions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nfunction NFTCard({props}) {\r\n    const {amount, contract_type, token_address, token_id, token_uri} = props\r\n    const [NFTinfo, setNFTinfo] = useState ({\r\n        description:\"\",\r\n        location:\"\",\r\n        name:\"\",\r\n        type:\"\"\r\n    })\r\n\r\n     const useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n  },\r\n  });\r\n\r\nconst classes = useStyles();\r\n\r\nconst getExtraInfo = async () => {\r\n  let result = await extraInfoNFT(token_id, contract_type)\r\n\r\n  try {\r\n    const {description, location, name, type} = result\r\n    setNFTinfo({\r\n        description, location, name, type\r\n    })\r\n\r\n  } catch (error) {\r\n      console.log(error)\r\n  }  \r\n \r\n}\r\n\r\nuseEffect(() => {\r\n    getExtraInfo()\r\n}, [])\r\n     \r\n\r\n  return (\r\n    <Card key={token_id} className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"140\"\r\n          image={contract_type === \"ERC1155\" ? `https://ipfs.moralis.io:2053/ipfs/${token_uri}` : token_uri}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n           \r\n             {NFTinfo.location}\r\n          </Typography>\r\n            <Typography color=\"textSecondary\" variant=\"h5\" component=\"h5\">\r\n            {NFTinfo.name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {NFTinfo.description}\r\n          </Typography>\r\n          \r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n            }\r\n\r\nexport default NFTCard;\r\n","import React, {useEffect, useState} from 'react'\r\nimport {getNFTBalance} from \"../../blockchain/blockchain-functions/functions\"\r\nimport NFTCard from \"./components/NFTCard\"\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nfunction Dashboard() {\r\n    const [NFT, setNFT] = useState ([])\r\n\r\n    const getNFT = async () => {\r\n        try{\r\n        let result = await getNFTBalance()\r\n        setNFT(result)        \r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n       getNFT()\r\n    }, [])\r\n\r\n   \r\n   \r\n    return (\r\n <Grid container\r\n  direction=\"row\" justifyContent=\"center\"\r\n  alignItems=\"center\" >  \r\n\r\n        <h1>My Accomodations!</h1>\r\n        <Grid container\r\n  direction=\"row\" justifyContent=\"center\"\r\n  alignItems=\"center\" >            \r\n            \r\n            {NFT.length !== 0 ? NFT.map((nft) => {\r\n                return <NFTCard props={nft} />\r\n            }) : <h1>No Items Available</h1> }\r\n            \r\n        \r\n        </Grid >\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","export default __webpack_public_path__ + \"static/media/baba.0b74d374.png\";","import React, { useState, useEffect } from \"react\";\r\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\" \r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport { Link } from \"react-router-dom\";\r\nimport {RiExchangeDollarLine} from \"react-icons/ri\";\r\nimport {MdRedeem} from \"react-icons/md\";\r\nimport { FiGrid } from \"react-icons/fi\";\r\nimport { GiTrade } from \"react-icons/gi\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport \"./responsiveDrawer.scss\";\r\nimport Header from \"../header/Card\";\r\nimport Create from \"../../pages/create\"\r\nimport Dashboard from \"../../pages/dashboard\"\r\n\r\nimport { GiSellCard } from 'react-icons/gi'\r\nimport { FiSettings } from 'react-icons/fi'\r\n\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport baba from \"../../assets/images/baba.png\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const [job, setjob] = useState(false);\r\n  const [task, settask] = useState(false);\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    \r\n  }, [Link])\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n\r\n      <List>\r\n        <ListItem className=\"sidebar_icons\">\r\n          <ListItemIcon className=\"baba_img\">\r\n            <img src={baba} alt=\"logo\" />\r\n          </ListItemIcon>\r\n        </ListItem>\r\n        <ListItem className=\"sidebar_icons user_box\">\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <ImageIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Trvl user\" secondary=\"trvl.com\" />\r\n      </ListItem>\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <FiGrid className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Dashboard\" />{\" \"}\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <FiGrid className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/create\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Create\" />{\" \"}\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <GiSellCard className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/sell\">\r\n           <ListItemText className=\"ttle_clr_ssbr\" primary=\"Sell\" />\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <GiTrade className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/assets-sell\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Trade\" />\r\n          </Link>\r\n        </ListItem>\r\n\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <MdRedeem className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/p2pmarketplace\">\r\n           <ListItemText primary=\"Redeem\" className=\"jobs_clr\" />\r\n          </Link>\r\n        </ListItem>\r\n\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <RiExchangeDollarLine className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/userdashboard\">\r\n            <ListItemText primary=\"T-share exchange \" className=\"jobs_clr\" />\r\n          </Link>\r\n        </ListItem>\r\n\r\n        \r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <FiSettings className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/userdashboard\">\r\n            \r\n            <ListItemText\r\n              className=\"ttle_clr_ssbr\"\r\n              primary=\"Setting\"\r\n            />\r\n          </Link>\r\n        </ListItem>\r\n       \r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <Typography noWrap className=\"d-flex\">\r\n            <h4 className=\"swatada\">Developers</h4>\r\n            \r\n          </Typography> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <div className=\"content_container\"> \r\n\r\n        <Header /> \r\n      \r\n        <Switch>                \r\n          <Route path=\"/create\" render={(props) => <Create {...props}/>} />\r\n        </Switch>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={(props) => <Dashboard {...props}/>} />\r\n        </Switch>\r\n            \r\n\r\n          \r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Create from \"./pages/create\"\r\nimport Sidebar from \"./components/sidebar/ResponsiveDrawer\"\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\" \r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n     <Sidebar />\r\n    {/* <Grid>\r\n      <Router>\r\n        <Switch>                \r\n          <Route exact path=\"/create\" component={Create}/>\r\n        </Switch>\r\n      </Router>\r\n    </Grid> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter as Router} from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n      <Router>\r\n         <App />\r\n      </Router>\r\n    ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}