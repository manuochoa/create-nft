{"version":3,"sources":["assets/images/baba.png","components/sidebar/components/drawer.js","components/sidebar/components/responsive.js","blockchain/build/web3.js","components/sidebar/index.js","blockchain/build/NFT.js","blockchain/build/NFT1155.js","blockchain/blockchain-functions/functions.js","components/wallet-button/WalletButton.js","components/header/index.js","components/header/components/Card.js","pages/create/components/createMultiNFT.js","pages/create/components/createSingleNFT.js","pages/create/index.js","pages/dashboard/components/NFTCard.js","pages/dashboard/index.js","pages/sell/index.js","pages/P2PMarketplace/components/card.js","pages/P2PMarketplace/index.js","pages/assetSell/components/AssetSellTab.js","pages/assetSell/index.js","App.js","reportWebVitals.js","index.js"],"names":["DrawerComponent","drawerWidth","classes","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","drawerPaper","content","flexGrow","padding","useStyles","className","toolbar","List","ListItem","ListItemIcon","src","baba","alt","ListItemAvatar","Avatar","ListItemText","primary","secondary","button","to","Responsive","web3","props","window","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","container","undefined","document","body","AppBar","position","Toolbar","IconButton","color","edge","onClick","Hidden","smUp","implementation","Drawer","variant","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","Web3","require","givenProvider","alert","ERC721Address","NFT","eth","Contract","NftToken","abi","ERC1155Address","NFT1155","ERC1155","Moralis","initialize","serverURL","currentUser","User","current","login","a","authenticate","then","user","console","log","get","uploadFile","data","fileToUpload","File","name","type","saveIPFS","createNFT","NFTDetails","instance","JSON","stringify","methods","create","send","from","ethereum","selectedAddress","newNFT","createMultiNFT","amount","getNFTBalance","options","chain","address","getNFTs","BscNFT","result","filter","nft","token_address","toUpperCase","getMarketNFTBalance","NFTInfo","URI","parse","WalletButton","Button","startIcon","Card","Box","Grid","item","xs","sm","Typography","component","lg","Paper","textAlign","palette","text","MultiNFT","location","description","Hash","setNFTDetails","fileUploaded","setFileUploaded","isUploading","setIsUploading","handleUpload","e","target","files","_ipfs","_hash","handleCreate","style","height","placeItems","includes","maxWidth","maxHeight","controls","CircularProgress","size","onChange","noValidate","autoComplete","TextField","fullWidth","placeholder","value","TextareaAutosize","minRows","FormControl","FormControlLabel","control","Switch","label","SingleNFT","Create","createSingleNFT","setCreateSingleNFT","ToggleButtonGroup","ToggleButton","selected","NFTCard","contract_type","token_id","token_uri","NFTinfo","setNFTinfo","getNFTInfo","error","useEffect","CardActionArea","CardMedia","image","title","CardContent","gutterBottom","CardActions","pathname","Dashboard","setNFT","getNFT","NFTBalance","justifyContent","alignItems","length","map","SellPage","isLoading","setIsLoading","balanceNFT","setBalanceNFT","InputLabel","htmlFor","Select","native","nftInfo","handleSelectChange","inputProps","InputProps","readOnly","marginBottom","NFTcard","CenteredGrid","marketNFTbalance","setMarketNFTbalance","alignment","setAlignment","getMarketNFTs","id","exclusive","event","newAlignment","RadioGroup","Radio","backgroundColor","background","divider","margin","age","state","setState","handleChange","varient","Divider","orientation","App","CssBaseline","path","render","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.da4d717e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/baba.0b74d374.png\";","import { Link } from \"react-router-dom\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport { RiExchangeDollarLine } from \"react-icons/ri\";\r\nimport { MdRedeem } from \"react-icons/md\";\r\nimport { FiGrid } from \"react-icons/fi\";\r\nimport { GiTrade } from \"react-icons/gi\";\r\nimport { GiSellCard } from \"react-icons/gi\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ListItem, ListItemText, ListItemIcon } from \"@material-ui/core\";\r\nimport baba from \"assets/images/baba.png\";\r\n\r\nfunction DrawerComponent() {\r\n  const drawerWidth = 240;\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n\r\n      <List>\r\n        <ListItem className=\"sidebar_icons\">\r\n          <ListItemIcon className=\"baba_img\">\r\n            <img src={baba} alt=\"logo\" />\r\n          </ListItemIcon>\r\n        </ListItem>\r\n        <ListItem className=\"sidebar_icons user_box\">\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <ImageIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Trvl user\" secondary=\"trvl.com\" />\r\n        </ListItem>\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <FiGrid className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Dashboard\" />{\" \"}\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <FiGrid className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/create\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Create\" />{\" \"}\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <GiSellCard className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/sell\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Sell\" />\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <GiTrade className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/assets-sell\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Trade\" />\r\n          </Link>\r\n        </ListItem>\r\n\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <MdRedeem className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/p2pmarketplace\">\r\n            <ListItemText primary=\"P2P Marketplace\" className=\"jobs_clr\" />\r\n          </Link>\r\n        </ListItem>\r\n\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <RiExchangeDollarLine className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/userdashboard\">\r\n            <ListItemText primary=\"T-share exchange \" className=\"jobs_clr\" />\r\n          </Link>\r\n        </ListItem>\r\n\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <FiSettings className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/userdashboard\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Setting\" />\r\n          </Link>\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawerComponent;\r\n","import React from \"react\";\r\nimport DrawerComponent from \"./drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport \"./responsiveDrawer.scss\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction Responsive(props) {\r\n  const { window } = props;\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <Typography noWrap className=\"d-flex\">\r\n            <h4 className=\"swatada\">Developers</h4>\r\n          </Typography> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <DrawerComponent />\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            <DrawerComponent />\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Responsive;\r\n","const Web3 = require('web3');\n\nlet web3;\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n  //we are in the browser and metamask is running\n  web3 = new Web3(Web3.givenProvider);\n} else {\n  //we are on the server or the user don't have metamask\n\n  window.alert('Please Connect Your Wallet');\n  // const provider = new Web3.providers.HttpProvider(\n  //     \"https://data-seed-prebsc-1-s1.binance.org:8545\"\n  // );\n  // web3 = new Web3(provider);\n}\n\nexport default web3;\n","import Responsive from \"./components/responsive\";\r\n\r\nexport default Responsive;\r\n","import web3 from \"./web3\";\r\nimport NftToken from \"./NftToken.json\";\r\n\r\nexport const ERC721Address = \"0x37fa87DeADE26A9404AdA0716EF5E75e73dc049a\";\r\n\r\nfunction NFT() {\r\n  return new web3.eth.Contract(NftToken.abi, ERC721Address);\r\n}\r\n\r\nexport default NFT;\r\n","import web3 from \"./web3\";\r\nimport ERC1155 from \"./ERC1155.json\";\r\n\r\nexport const ERC1155Address = \"0x42Af010433B1900E932a69EAfE2ff464b031A6f6\";\r\n\r\nfunction NFT1155() {\r\n  return new web3.eth.Contract(ERC1155.abi, ERC1155Address);\r\n}\r\n\r\nexport default NFT1155;\r\n","import NftToken, { ERC721Address } from \"../build/NFT\";\r\nimport NFT1155, { ERC1155Address } from \"../build/NFT1155\";\r\n\r\nconst Moralis = require(\"moralis\");\r\nMoralis.initialize(\"9jTSEy7eKGdH8EBCOvH5zCYM01TxksUQcItcbfQg\");\r\nMoralis.serverURL = \"https://dzfl3tiplyqt.usemoralis.com:2053/server\";\r\nlet currentUser = Moralis.User.current();\r\n\r\nexport const login = async () => {\r\n  try {\r\n    Moralis.Web3.authenticate().then(function (user) {\r\n      console.log(user.get(\"ethAddress\"));\r\n    });\r\n\r\n    return currentUser.get(\"ethAddress\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    Moralis.User.logOut().then(() => {\r\n      console.log(Moralis.User.current());\r\n    });\r\n    return currentUser.get(\"ethAddress\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport async function uploadFile(data) {\r\n  try {\r\n    const fileToUpload = new Moralis.File(data.name, data);\r\n    fileToUpload.type = data.type;\r\n    await fileToUpload.saveIPFS();\r\n\r\n    return fileToUpload;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const createNFT = async (NFTDetails) => {\r\n  try {\r\n    let instance = await NftToken();\r\n    let data = JSON.stringify(NFTDetails);\r\n    console.log(data);\r\n    const newNFT = await instance.methods\r\n      .create(data, data)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n\r\n    console.log(newNFT);\r\n    return newNFT;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createMultiNFT = async (NFTDetails) => {\r\n  try {\r\n    let instance = await NFT1155();\r\n    let data = JSON.stringify(NFTDetails);\r\n    console.log(data);\r\n    const newNFT = await instance.methods\r\n      .create(NFTDetails.amount, data, data)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n\r\n    console.log(newNFT);\r\n    return newNFT;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getNFTBalance = async () => {\r\n  try {\r\n    const options = {\r\n      chain: \"bsc testnet\",\r\n      address: window.ethereum.selectedAddress,\r\n    };\r\n    const BscNFT = await Moralis.Web3.getNFTs(options);\r\n    const result = BscNFT.filter((nft) => {\r\n      if (nft.token_address.toUpperCase() === ERC1155Address.toUpperCase()) {\r\n        return true;\r\n      } else if (\r\n        nft.token_address.toUpperCase() === ERC721Address.toUpperCase()\r\n      ) {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getMarketNFTBalance = async () => {\r\n  try {\r\n    const options = {\r\n      chain: \"bsc testnet\",\r\n      address: \"0x239d34DF6cDa1844E6E2A190C66ea76B9ca902C0\",\r\n    };\r\n    const BscNFT = await Moralis.Web3.getNFTs(options);\r\n    const result = BscNFT.filter((nft) => {\r\n      if (nft.token_address.toUpperCase() === ERC1155Address.toUpperCase()) {\r\n        return true;\r\n      } else if (\r\n        nft.token_address.toUpperCase() === ERC721Address.toUpperCase()\r\n      ) {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const extraInfoNFT = async (id, typeNFT) => {\r\n  if (typeNFT === \"ERC721\") {\r\n    try {\r\n      let instance = await NftToken();\r\n      let extraInfo = await instance.methods.extraInfoMap(id).call();\r\n      return JSON.parse(extraInfo.metaData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } else if (typeNFT === \"ERC1155\") {\r\n    try {\r\n      let instance = await NFT1155();\r\n      let extraInfo = await instance.methods.extraInfoMap(id).call();\r\n      return JSON.parse(extraInfo.metaData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n};\r\n\r\nexport const NFTInfo = (URI) => {\r\n  let data = JSON.parse(URI);\r\n  return data;\r\n};\r\n","import React from \"react\";\r\n// import { useWallet, UseWalletProvider } from \"use-wallet\";\r\nimport { BiWallet } from \"react-icons/bi\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { login } from \"../../blockchain/blockchain-functions/functions\";\r\nimport \"./walletbutton.scss\";\r\n\r\nfunction WalletButton() {\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"connect_wallect\"\r\n        onClick={login}\r\n        startIcon={<BiWallet />}\r\n      >\r\n        Connect wallet\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WalletButton;\r\n","import Card from \"./components/Card\";\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { RiShareForwardLine } from \"react-icons/ri\";\r\nimport { RiCoinsLine } from \"react-icons/ri\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { FaHandHoldingHeart } from \"react-icons/fa\";\r\nimport WalletButton from \"../../wallet-button/WalletButton\";\r\nimport \"./card.scss\";\r\n\r\nexport default function SimpleCard() {\r\n  return (\r\n    <Box className=\"main\">\r\n      <Grid container spacing={3} className=\"main_heading\">\r\n        <Grid item xs={12} sm={8}>\r\n          <Typography variant=\"h4\" component=\"h2\">\r\n            My Travel Assets Dasdhboard\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4}>\r\n          <WalletButton />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper className=\"red_paper\">\r\n            <Avatar>\r\n              <RiShareForwardLine />\r\n            </Avatar>\r\n            <Box>\r\n              <Typography variant=\"h6\">300</Typography>\r\n              <Typography variant=\"caption\">Your T-shares</Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper className=\"red_paper\">\r\n            <Avatar>\r\n              <RiCoinsLine />\r\n            </Avatar>\r\n            <Box>\r\n              <Typography variant=\"h6\">3000</Typography>\r\n              <Typography variant=\"caption\">Your T-shares</Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper className=\"red_paper\">\r\n            <Avatar>\r\n              <FaHandHoldingHeart />\r\n            </Avatar>\r\n            <Box>\r\n              <Typography variant=\"h6\">100</Typography>\r\n              <Typography variant=\"caption\">Your T-shares</Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper className=\"yellow_paper\">\r\n            <Avatar>\r\n              <FiSettings />\r\n            </Avatar>\r\n            <Box>\r\n              <Typography variant=\"h6\">Setting</Typography>\r\n              <Typography variant=\"caption\">Your T-shares</Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  uploadFile,\r\n  createMultiNFT,\r\n} from \"../../../blockchain/blockchain-functions/functions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./form.scss\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function MultiNFT() {\r\n  const classes = useStyles();\r\n  const [NFTDetails, setNFTDetails] = useState({\r\n    name: \"\",\r\n    location: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    URI: \"\",\r\n    Hash: \"\",\r\n  });\r\n  const [fileUploaded, setFileUploaded] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const handleUpload = async (e) => {\r\n    setIsUploading(true);\r\n    let result = await uploadFile(e.target.files[0]);\r\n    setFileUploaded(result);\r\n    setNFTDetails({\r\n      ...NFTDetails,\r\n      URI: result._ipfs,\r\n      Hash: result._hash,\r\n      type: result.type,\r\n    });\r\n    setIsUploading(false);\r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    let result = await createMultiNFT(NFTDetails);\r\n    console.log(NFTDetails);\r\n  };\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Typography variant=\"h5\">Create Multi NFT - BEP-1155</Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={4} className=\"img_column\">\r\n          <Box\r\n            style={{\r\n              width: \"300px\",\r\n              height: \"300px\",\r\n              display: \"grid\",\r\n              placeItems: \"center\",\r\n            }}\r\n          >\r\n            {fileUploaded?.type.includes(\"image\") && (\r\n              <img\r\n                style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                src={fileUploaded._ipfs}\r\n                alt={fileUploaded._ipfs}\r\n              />\r\n            )}\r\n\r\n            {(fileUploaded?.type.includes(\"video\") ||\r\n              fileUploaded?.type.includes(\"audio\")) && (\r\n              <video\r\n                style={{ \"max-width\": \"100%\", \"max-height\": \"100%\" }}\r\n                controls\r\n                src={fileUploaded._ipfs}\r\n              />\r\n            )}\r\n            {!fileUploaded && isUploading && <CircularProgress />}\r\n            {!fileUploaded && !isUploading && <h3>Upload Your File</h3>}\r\n          </Box>\r\n          <br />\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className=\"darkbtn\"\r\n          >\r\n            <label>\r\n              Upload\r\n              <input\r\n                onChange={(e) => handleUpload(e)}\r\n                type=\"file\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </label>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} lg={8}>\r\n          <Grid container>\r\n            <Grid xs={12} lg={6} className=\"column\">\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Asset Name\"\r\n                  value={NFTDetails.name}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({ ...NFTDetails, name: e.target.value })\r\n                  }\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Asset Location\"\r\n                  value={NFTDetails.location}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({ ...NFTDetails, location: e.target.value })\r\n                  }\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Amount of Tokens\"\r\n                  type=\"number\"\r\n                  value={NFTDetails.amount}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({ ...NFTDetails, amount: e.target.value })\r\n                  }\r\n                />\r\n\r\n                <TextareaAutosize\r\n                  aria-label=\"minimum height\"\r\n                  className=\"textarea_feild\"\r\n                  minRows={5}\r\n                  placeholder=\"Description and Comments\"\r\n                  value={NFTDetails.description}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({\r\n                      ...NFTDetails,\r\n                      description: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </form>\r\n              <FormControl variant=\"outlined\" className=\"select_feild\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                    // checked={checked} onChange={toggleChecked}\r\n                    />\r\n                  }\r\n                  label=\"Put on Sale\"\r\n                />\r\n              </FormControl>\r\n              <br />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                onClick={handleCreate}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  uploadFile,\r\n  createNFT,\r\n} from \"../../../blockchain/blockchain-functions/functions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./form.scss\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function SingleNFT() {\r\n  const classes = useStyles();\r\n  const [NFTDetails, setNFTDetails] = useState({\r\n    name: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    URI: \"\",\r\n    Hash: \"\",\r\n  });\r\n  const [fileUploaded, setFileUploaded] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const handleUpload = async (e) => {\r\n    setIsUploading(true);\r\n    let result = await uploadFile(e.target.files[0]);\r\n    setFileUploaded(result);\r\n    setNFTDetails({\r\n      ...NFTDetails,\r\n      URI: result._ipfs,\r\n      Hash: result._hash,\r\n      type: result.type,\r\n    });\r\n    setIsUploading(false);\r\n    console.log(result);\r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    let result = await createNFT(NFTDetails);\r\n    console.log(result);\r\n  };\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Typography variant=\"h5\">Create Single NFT - BEP721</Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={4} className=\"img_column\">\r\n          <Box\r\n            style={{\r\n              width: \"300px\",\r\n              height: \"300px\",\r\n              display: \"grid\",\r\n              placeItems: \"center\",\r\n            }}\r\n          >\r\n            {fileUploaded?.type.includes(\"image\") && (\r\n              <img\r\n                style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                src={fileUploaded._ipfs}\r\n                alt={fileUploaded._ipfs}\r\n              />\r\n            )}\r\n\r\n            {(fileUploaded?.type.includes(\"video\") ||\r\n              fileUploaded?.type.includes(\"audio\")) && (\r\n              <video\r\n                style={{ \"max-width\": \"100%\", \"max-height\": \"100%\" }}\r\n                controls\r\n                src={fileUploaded._ipfs}\r\n              />\r\n            )}\r\n            {!fileUploaded && isUploading && <CircularProgress />}\r\n            {!fileUploaded && !isUploading && <h3>Upload Your File</h3>}\r\n          </Box>\r\n          <br />\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className=\"darkbtn\"\r\n          >\r\n            <label>\r\n              Upload\r\n              <input\r\n                onChange={(e) => handleUpload(e)}\r\n                type=\"file\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </label>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} lg={8}>\r\n          <Grid container>\r\n            <Grid xs={12} lg={6} className=\"column\">\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Asset Name\"\r\n                  value={NFTDetails.name}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({ ...NFTDetails, name: e.target.value })\r\n                  }\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Asset Location\"\r\n                  value={NFTDetails.location}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({ ...NFTDetails, location: e.target.value })\r\n                  }\r\n                />\r\n\r\n                <TextareaAutosize\r\n                  aria-label=\"minimum height\"\r\n                  className=\"textarea_feild\"\r\n                  minRows={5}\r\n                  placeholder=\"Description and Comments\"\r\n                  value={NFTDetails.description}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({\r\n                      ...NFTDetails,\r\n                      description: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </form>\r\n              <FormControl variant=\"outlined\" className=\"select_feild\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                    // checked={checked} onChange={toggleChecked}\r\n                    />\r\n                  }\r\n                  label=\"Put on Sale\"\r\n                />\r\n              </FormControl>\r\n              <br />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                onClick={handleCreate}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport MultiNFT from \"./components/createMultiNFT\";\r\nimport SingleNFT from \"./components/createSingleNFT\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction Create() {\r\n  const [createSingleNFT, setCreateSingleNFT] = useState(true);\r\n\r\n  return (\r\n    <Paper\r\n      className=\"form_content\"\r\n      style={{\r\n        display: \"grid\",\r\n        \"place-items\": \"center\",\r\n      }}\r\n    >\r\n      <ToggleButtonGroup>\r\n        <ToggleButton\r\n          selected={createSingleNFT}\r\n          value=\"left\"\r\n          aria-label=\"left aligned\"\r\n          className=\"bb\"\r\n          onClick={() => setCreateSingleNFT(true)}\r\n        >\r\n          Sigle NFT\r\n        </ToggleButton>\r\n        <ToggleButton\r\n          selected={!createSingleNFT}\r\n          aria-label=\"justified\"\r\n          className=\"bbb\"\r\n          onClick={() => setCreateSingleNFT(false)}\r\n        >\r\n          Multiple NFT\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n\r\n      {createSingleNFT ? <SingleNFT /> : <MultiNFT />}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Create;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NFTInfo } from \"blockchain/blockchain-functions/functions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction NFTCard({ props }) {\r\n  const { amount, contract_type, token_address, token_id, token_uri } = props;\r\n  const [NFTinfo, setNFTinfo] = useState({\r\n    name: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    URI: \"\",\r\n    Hash: \"\",\r\n  });\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 300,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const getNFTInfo = async () => {\r\n    let result = await NFTInfo(token_uri);\r\n\r\n    try {\r\n      const { name, location, description, type, URI, Hash } = result;\r\n      setNFTinfo({\r\n        name,\r\n        location,\r\n        description,\r\n        type,\r\n        URI,\r\n        Hash,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(props);\r\n    getNFTInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component={\"img\"}\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"140\"\r\n          image={NFTinfo.URI}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {NFTinfo.location}\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"h5\" component=\"h5\">\r\n            {NFTinfo.name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {NFTinfo.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Link\r\n          to={{\r\n            pathname: \"/sell\",\r\n            props: {\r\n              ...NFTinfo,\r\n              amount,\r\n              contract_type,\r\n              token_address,\r\n              token_id,\r\n            },\r\n          }}\r\n        >\r\n          <Button size=\"small\" color=\"primary\">\r\n            Sell\r\n          </Button>\r\n        </Link>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Trade\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default NFTCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getNFTBalance } from \"../../blockchain/blockchain-functions/functions\";\r\nimport NFTCard from \"./components/NFTCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction Dashboard() {\r\n  const [NFT, setNFT] = useState([]);\r\n\r\n  const getNFT = async () => {\r\n    try {\r\n      let NFTBalance = await getNFTBalance();\r\n\r\n      setNFT(NFTBalance);\r\n\r\n      console.log(NFTBalance);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNFT();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n      <h1>My Accomodations!</h1>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        {NFT !== undefined && NFT.length !== 0 ? (\r\n          NFT.map((nft) => {\r\n            return (\r\n              <NFTCard key={nft.token_id + nft.contract_type} props={nft} />\r\n            );\r\n          })\r\n        ) : (\r\n          <h1>No Items Available</h1>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  getNFTBalance,\r\n  NFTInfo,\r\n} from \"blockchain/blockchain-functions/functions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./index.scss\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Box from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function SellPage(props) {\r\n  const classes = useStyles();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [balanceNFT, setBalanceNFT] = useState([]);\r\n  const [NFTinfo, setNFTinfo] = useState({\r\n    name: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    URI: \"\",\r\n    Hash: \"\",\r\n    amount: \"\",\r\n    contract_type: \"\",\r\n    token_address: \"\",\r\n    token_id: \"\",\r\n  });\r\n\r\n  const getNFTs = async () => {\r\n    const result = await getNFTBalance();\r\n    setBalanceNFT(result);\r\n    console.log(result);\r\n  };\r\n\r\n  const handleSelectChange = (nftInfo) => {\r\n    setIsLoading(true);\r\n    let result = JSON.parse(nftInfo);\r\n    let data = JSON.parse(result.token_uri);\r\n    setNFTinfo({ ...result, ...data });\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.props) {\r\n      setNFTinfo(props.location.props);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getNFTs();\r\n  }, []);\r\n\r\n  useEffect(() => {}, [NFTinfo]);\r\n\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Typography variant=\"h5\">Trade Travel Assets</Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={4} className=\"img_column\">\r\n          <Box\r\n            style={{\r\n              width: \"300px\",\r\n              height: \"300px\",\r\n              display: \"grid\",\r\n              placeItems: \"center\",\r\n            }}\r\n          >\r\n            {isLoading ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <img\r\n                style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                src={NFTinfo.URI}\r\n                alt={NFTinfo.URI}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} lg={8}>\r\n          <Grid container>\r\n            <Grid xs={12} lg={6} className=\"column\">\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <FormControl variant=\"outlined\" className=\"select_feild\">\r\n                  <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                    Asset to Sell\r\n                  </InputLabel>\r\n                  <Select\r\n                    native\r\n                    value=\"Hola\"\r\n                    onChange={(e) => handleSelectChange(e.target.value)}\r\n                    inputProps={{}}\r\n                  >\r\n                    <option value=\"Select NFT to sell\" />\r\n                    {balanceNFT.map((nft) => {\r\n                      const { token_address, token_id, token_uri } = nft;\r\n                      const data = JSON.parse(token_uri);\r\n                      return (\r\n                        <option\r\n                          key={`${token_address}${token_id}`}\r\n                          value={JSON.stringify(nft)}\r\n                        >{`${data.location} - ${data.name}`}</option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  style={{ marginBottom: \"15px\" }}\r\n                  value={`Units available to sell: ${NFTinfo.amount}`}\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Price Per Unit for Sale Now in TRVL\"\r\n                />\r\n\r\n                {/* <Slider\r\n                  defaultValue={NFTinfo.amount}\r\n                  step={1}\r\n                  max={NFTinfo.amount}\r\n                  color=\"secondary\"\r\n                  valueLabelDisplay=\"on\"\r\n                /> */}\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{}}\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Price Per Unit for Sale Now in TRVL\"\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{}}\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Minimum Bid Price Per Unit in TRVL\"\r\n                />\r\n                <TextareaAutosize\r\n                  aria-label=\"minimum height\"\r\n                  className=\"textarea_feild\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  value={NFTinfo.description}\r\n                  placeholder=\"Description and Comments\"\r\n                />\r\n              </form>\r\n              <FormControl variant=\"outlined\" className=\"select_feild\">\r\n                <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                  Select Tags\r\n                </InputLabel>\r\n                <Select\r\n                  native\r\n                  inputProps={{\r\n                    name: \"age\",\r\n                  }}\r\n                >\r\n                  <option aria-label=\"None\" value=\"\" />\r\n                  <option value={10}>Tenc</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </Select>\r\n              </FormControl>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                onClick={() => console.log(NFTinfo)}\r\n              >\r\n                SUBMIT FOR SALE\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs={12} lg={6} className=\"column\">\r\n              <Typography variant=\"h6\">TRVL to USD Calculator</Typography>\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Amount in TRVL\"\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Amount in USDT\"\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  className=\"darkbtn\"\r\n                >\r\n                  CONVERT\r\n                </Button>\r\n              </form>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NFTInfo } from \"blockchain/blockchain-functions/functions\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction NFTcard({ props }) {\r\n  const classes = useStyles();\r\n\r\n  const { amount, contract_type, token_address, token_id, token_uri } = props;\r\n  const [NFTinfo, setNFTinfo] = useState({\r\n    name: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    URI: \"\",\r\n    Hash: \"\",\r\n  });\r\n\r\n  const getNFTInfo = async () => {\r\n    let result = await NFTInfo(token_uri);\r\n\r\n    try {\r\n      const { name, location, description, type, URI, Hash } = result;\r\n      setNFTinfo({\r\n        name,\r\n        location,\r\n        description,\r\n        type,\r\n        URI,\r\n        Hash,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(props);\r\n    getNFTInfo();\r\n  }, []);\r\n  return (\r\n    <Grid item xs={12} lg={3} className=\"img_column_market\">\r\n      <Card className={classes.root}>\r\n        <Link\r\n          to={{\r\n            pathname: \"/assetsell\",\r\n            props: {\r\n              ...NFTinfo,\r\n              amount,\r\n              contract_type,\r\n              token_address,\r\n              token_id,\r\n            },\r\n          }}\r\n        >\r\n          <CardActionArea>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"Contemplative Reptile\"\r\n              height=\"200\"\r\n              image={NFTinfo.URI}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\">\r\n                {NFTinfo.location}\r\n              </Typography>\r\n              <Typography variant=\"h6\">55 TVRL ($333 UDD)</Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Link>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default NFTcard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getMarketNFTBalance } from \"blockchain/blockchain-functions/functions\";\r\nimport NFTcard from \"./components/card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./form.scss\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function CenteredGrid() {\r\n  const classes = useStyles();\r\n\r\n  const [marketNFTbalance, setMarketNFTbalance] = useState([]);\r\n  const [alignment, setAlignment] = React.useState(\"left\");\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const getMarketNFTs = async () => {\r\n    let result = await getMarketNFTBalance();\r\n    setMarketNFTbalance(result);\r\n    console.log(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMarketNFTs();\r\n  }, []);\r\n\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={6} className=\"img_column\">\r\n          <Typography variant=\"h5\">Trade Travel Assets</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} lg={6} className=\"input_btn\">\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Search Location\"\r\n            />\r\n            <button className=\"connect_wallect text-center\">Search</button>\r\n          </form>\r\n        </Grid>\r\n        <Grid xs={12} lg={12} className=\"btns\">\r\n          <button className=\"connect_wallet\">All</button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className=\"outlined_btn\"\r\n          >\r\n            Accommodations\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className=\"outlined_btn\"\r\n          >\r\n            Experiences\r\n          </Button>\r\n          <ToggleButtonGroup\r\n            value={alignment}\r\n            exclusive\r\n            onChange={handleAlignment}\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"left\" aria-label=\"left aligned\" className=\"bb\">\r\n              Buy\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value=\"justify\"\r\n              aria-label=\"justified\"\r\n              className=\"bbb\"\r\n            >\r\n              Trade\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Grid>\r\n        <Grid xs={12} lg={12}>\r\n          <FormControl variant=\"outlined\" className=\"select__feild\">\r\n            <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n              Select Tags\r\n            </InputLabel>\r\n            <Select native inputProps={{}}>\r\n              <option aria-label=\"None\" value=\"\" />\r\n              <option value={10}>Tenc</option>\r\n              <option value={20}>Twenty</option>\r\n              <option value={30}>Thirty</option>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        {marketNFTbalance.map((nft) => {\r\n          return <NFTcard key={nft.token_id + nft.contract_type} props={nft} />;\r\n        })}\r\n\r\n        <Grid item xs={12} lg={3} className=\"img_column_market\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\">\r\n              <FormControlLabel value=\"All\" control={<Radio />} label=\"All\" />\r\n              <FormControlLabel\r\n                value=\"Vacationer Level\"\r\n                control={<Radio />}\r\n                label=\"Vacationer Level\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Traveller Level\"\r\n                control={<Radio />}\r\n                label=\"Traveller Level\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Explorer Level\"\r\n                control={<Radio />}\r\n                label=\"Explorer Level\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Jetsetter Level\"\r\n                control={<Radio />}\r\n                label=\"Jetsetter Level\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport \"../form.scss\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Information\" {...a11yProps(0)} />\r\n          <Tab label=\"History\" {...a11yProps(1)} />\r\n          <Tab label=\"Bids\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Typography varient=\"h5\" className=\"description\">\r\n          Description:\r\n        </Typography>\r\n        <Typography varient=\"h6\" className=\"description_pera\">\r\n          Neque porro quisquam est qui dolorem ipsum quia dolor sit amet,\r\n          consectetur, ... Lorem Ipsum is simply dummy text of the printing and\r\n          typesetting industry. Neque porro quisquam est qui dolorem ipsum quia\r\n          dolor sit amet, consectetur. Lorem Ipsum is simply dummy text of the\r\n          printing and typesetting industry.\r\n        </Typography>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Item Two\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Item Three\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NFTInfo } from \"blockchain/blockchain-functions/functions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./form.scss\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { MdFavorite } from \"react-icons/md\";\r\nimport { IoIosShareAlt } from \"react-icons/io\";\r\nimport AssetSellTab from \"./components/AssetSellTab\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  divider: {\r\n    height: 20,\r\n    margin: \"4px 10px 12px 10px\",\r\n  },\r\n}));\r\n\r\nexport default function CenteredGrid(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    age: \"\",\r\n    name: \"hai\",\r\n  });\r\n  const [value, setValue] = React.useState(\"female\");\r\n  const [alignment, setAlignment] = React.useState(\"left\");\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n  //   const { amount, contract_type, token_address, token_id, token_uri } = props;\r\n  const [NFTinfo, setNFTinfo] = useState({\r\n    name: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    URI: \"\",\r\n    Hash: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n  //   const getNFTInfo = async () => {\r\n  //     let result = await NFTInfo(token_uri);\r\n\r\n  //     try {\r\n  //       const { name, location, description, type, URI, Hash } = result;\r\n  //       setNFTinfo({\r\n  //         name,\r\n  //         location,\r\n  //         description,\r\n  //         type,\r\n  //         URI,\r\n  //         Hash,\r\n  //       });\r\n  //     } catch (error) {\r\n  //       console.log(error);\r\n  //     }\r\n  //   };\r\n  useEffect(() => {\r\n    if (props.location.props) {\r\n      setNFTinfo(props.location.props);\r\n      console.log(props.location.props);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Typography variant=\"h5\">Asset Sales Page</Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={6} className=\"img_column\">\r\n          <Box\r\n            style={{\r\n              width: \"450px\",\r\n              height: \"500px\",\r\n              display: \"grid\",\r\n              placeItems: \"center\",\r\n            }}\r\n          >\r\n            <img\r\n              style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n              src={NFTinfo.URI}\r\n            />\r\n          </Box>\r\n          <form className=\"contract_input\" noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Contract Address: 0x3e31...ea9\"\r\n            />\r\n          </form>\r\n        </Grid>\r\n        <Grid item xs={12} lg={6} className=\"column\">\r\n          <Box className=\"heading_btn\">\r\n            <Typography variant=\"h6\">{NFTinfo.name}</Typography>\r\n            <Typography variant=\"h6\">{NFTinfo.location}</Typography>\r\n          </Box>\r\n          <Box className=\"highlight_text\">\r\n            <Typography varient=\"h6\" component=\"h6\">\r\n              JGNNFT\r\n            </Typography>\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n            <Typography varient=\"p\">\r\n              <FaUser /> Oxner own 5\r\n            </Typography>\r\n          </Box>\r\n          <Box className=\"heading_button\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"dark\"\r\n              className=\"outlined_btn\"\r\n              startIcon={<MdFavorite />}\r\n            >\r\n              Like 1\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"dark\"\r\n              className=\"outlined_btn\"\r\n              startIcon={<IoIosShareAlt />}\r\n            >\r\n              Share\r\n            </Button>\r\n          </Box>\r\n\r\n          {/* <AssetSellTab /> */}\r\n          <Typography variant=\"h5\" className=\"properties\">\r\n            Properties:\r\n          </Typography>\r\n          <Box className=\"selectFeilds\">\r\n            <FormControl variant=\"outlined\" className=\"selectfeild\">\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                Location\r\n              </InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  name: \"age\",\r\n                  id: \"outlined-age-native-simple\",\r\n                }}\r\n              >\r\n                <option aria-label=\"None\" value=\"\" />\r\n                <option value={10}>Tenc</option>\r\n                <option value={20}>Twenty</option>\r\n                <option value={30}>Thirty</option>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl variant=\"outlined\" className=\"selectfeild\">\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                Max Supply\r\n              </InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  name: \"age\",\r\n                  id: \"outlined-age-native-simple\",\r\n                }}\r\n              >\r\n                <option aria-label=\"None\" value=\"\" />\r\n                <option value={10}>Tenc</option>\r\n                <option value={20}>Twenty</option>\r\n                <option value={30}>Thirty</option>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <button className=\"connect_wallet\">Cancel Sell</button>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button className=\"connect_wallet\">Edit</button>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./App.scss\";\r\nimport Sidebar from \"./components/sidebar\";\r\nimport Header from \"./components/header\";\r\nimport Create from \"./pages/create\";\r\nimport Dashboard from \"./pages/dashboard\";\r\nimport Sell from \"./pages/sell\";\r\nimport P2P from \"./pages/P2PMarketplace\";\r\nimport AssetSell from \"./pages/assetSell\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n\r\n        <Sidebar />\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <div className=\"content_container\">\r\n            <Header />\r\n\r\n            <Switch>\r\n              <Route path=\"/create\" render={(props) => <Create {...props} />} />\r\n            </Switch>\r\n            <Switch>\r\n              <Route path=\"/sell\" render={(props) => <Sell {...props} />} />\r\n            </Switch>\r\n            <Switch>\r\n              <Route\r\n                path=\"/assetsell\"\r\n                render={(props) => <AssetSell {...props} />}\r\n              />\r\n            </Switch>\r\n            <Switch>\r\n              <Route\r\n                path=\"/p2pmarketplace\"\r\n                render={(props) => <P2P {...props} />}\r\n              />\r\n            </Switch>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={(props) => <Dashboard {...props} />}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}